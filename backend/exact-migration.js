/**
 * Exact Database Migration Script
 * Generated from source database analysis
 * Created: 2025-08-04T16:35:52.404Z
 * Tables: 39
 */

const { executeQuery, closeDatabase } = require('./config/database');
const oracledb = require('oracledb');
const path = require('path');

async function runExactMigration() {
  try {
    console.log('üöÄ Starting exact database migration...');
    
    // Initialize Oracle Thin client
    oracledb.initOracleClient();
    console.log('‚úÖ Oracle Thin client initialized');
    
    // Load environment variables
    require('dotenv').config({ path: path.join(__dirname, '.env') });
    
    const dbConfig = {
      user: process.env.ORACLE_USER,
      password: process.env.ORACLE_PASSWORD,
      connectString: process.env.ORACLE_CONNECT_STRING,
      poolMin: parseInt(process.env.ORACLE_POOL_MIN) || 2,
      poolMax: parseInt(process.env.ORACLE_POOL_MAX) || 10,
      poolIncrement: parseInt(process.env.ORACLE_POOL_INCREMENT) || 1
    };
    
    await oracledb.createPool(dbConfig);
    console.log('‚úÖ Database pool created successfully');
    
    // Create tables with exact structure
    console.log('üìù Creating tables with exact structure...');
    await executeQuery(`CREATE TABLE HRMS_ADVANCES (
  ADVANCE_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  ADVANCE_TYPE VARCHAR2(50) NOT NULL,
  AMOUNT NUMBER(10,2) NOT NULL,
  REASON VARCHAR2(500) NOT NULL,
  REQUEST_DATE DATE DEFAULT SYSDATE,
  CREATED_BY NUMBER NOT NULL,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  AMOUNT_REQUIRED_ON_DATE DATE,
  DEDUCTION_MONTH VARCHAR2(20),
  PRIMARY KEY (ADVANCE_ID),
  CONSTRAINT SYS_C0046451 CHECK ("ADVANCE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046452 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046453 CHECK ("ADVANCE_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046454 CHECK ("AMOUNT" IS NOT NULL),
  CONSTRAINT SYS_C0046455 CHECK ("REASON" IS NOT NULL),
  CONSTRAINT SYS_C0046456 CHECK ("CREATED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046457 CHECK (ADVANCE_TYPE IN ('SALARY', 'TRAVEL', 'MEDICAL', 'EDUCATION', 'HOUSING', 'OTHER'))
)`);
    console.log('‚úÖ Created table: HRMS_ADVANCES');
    await executeQuery(`CREATE TABLE HRMS_ATTENDANCE (
  ATTENDANCE_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  ATTENDANCE_DATE DATE NOT NULL,
  SHIFT_ID NUMBER,
  SCHEDULED_IN_TIME VARCHAR2(5),
  SCHEDULED_OUT_TIME VARCHAR2(5),
  ACTUAL_IN_TIME VARCHAR2(5),
  ACTUAL_OUT_TIME VARCHAR2(5),
  IN_LOCATION VARCHAR2(100),
  OUT_LOCATION VARCHAR2(100),
  IN_DEVICE_ID VARCHAR2(50),
  OUT_DEVICE_ID VARCHAR2(50),
  IN_METHOD VARCHAR2(20) DEFAULT 'MANUAL' ,
  OUT_METHOD VARCHAR2(20) DEFAULT 'MANUAL' ,
  WORK_HOURS NUMBER(5,2),
  OVERTIME_HOURS NUMBER(5,2) DEFAULT 0,
  LATE_MINUTES NUMBER(3) DEFAULT 0,
  EARLY_LEAVE_MINUTES NUMBER(3) DEFAULT 0,
  STATUS VARCHAR2(20) DEFAULT 'PRESENT' ,
  LEAVE_TYPE VARCHAR2(20),
  REMARKS VARCHAR2(500),
  APPROVED_BY NUMBER,
  APPROVED_AT TIMESTAMP(6)(11),
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ATTENDANCE_ID),
  CONSTRAINT UQ_ATTENDANCE_EMPLOYEE_DATE UNIQUE (EMPLOYEE_ID),
  CONSTRAINT UQ_ATTENDANCE_EMPLOYEE_DATE UNIQUE (ATTENDANCE_DATE),
  CONSTRAINT SYS_C0047069 CHECK ("ATTENDANCE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047070 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047071 CHECK ("ATTENDANCE_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0047072 CHECK (IN_METHOD IN ('MANUAL', 'BIOMETRIC', 'CARD', 'MOBILE')),
  CONSTRAINT SYS_C0047073 CHECK (OUT_METHOD IN ('MANUAL', 'BIOMETRIC', 'CARD', 'MOBILE')),
  CONSTRAINT SYS_C0047074 CHECK (STATUS IN ('PRESENT', 'ABSENT', 'HALF_DAY', 'LEAVE', 'HOLIDAY', 'WEEKEND'))
)`);
    console.log('‚úÖ Created table: HRMS_ATTENDANCE');
    await executeQuery(`CREATE TABLE HRMS_ATTENDANCE_LOGS (
  LOG_ID NUMBER NOT NULL,
  DEVICE_ID NUMBER,
  EMPLOYEE_ID NUMBER,
  LOG_TIME TIMESTAMP(6)(11) NOT NULL,
  LOG_TYPE VARCHAR2(20),
  BIOMETRIC_DATA VARCHAR2(1000),
  VERIFICATION_METHOD VARCHAR2(20),
  VERIFICATION_STATUS VARCHAR2(20) DEFAULT 'SUCCESS' ,
  DEVICE_RESPONSE VARCHAR2(500),
  PROCESSED NUMBER(1) DEFAULT 0 ,
  PROCESSED_AT TIMESTAMP(6)(11),
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (LOG_ID),
  CONSTRAINT SYS_C0047099 CHECK ("LOG_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047100 CHECK ("LOG_TIME" IS NOT NULL),
  CONSTRAINT SYS_C0047101 CHECK (LOG_TYPE IN ('IN', 'OUT', 'BREAK_START', 'BREAK_END')),
  CONSTRAINT SYS_C0047102 CHECK (VERIFICATION_METHOD IN ('FINGERPRINT', 'FACE', 'CARD', 'PIN', 'MOBILE')),
  CONSTRAINT SYS_C0047103 CHECK (VERIFICATION_STATUS IN ('SUCCESS', 'FAILED', 'PENDING')),
  CONSTRAINT SYS_C0047104 CHECK (PROCESSED IN (0, 1))
)`);
    console.log('‚úÖ Created table: HRMS_ATTENDANCE_LOGS');
    await executeQuery(`CREATE TABLE HRMS_ATTENDANCE_RULES (
  RULE_ID NUMBER NOT NULL,
  RULE_NAME VARCHAR2(100) NOT NULL,
  RULE_TYPE VARCHAR2(20) NOT NULL,
  APPLICABLE_FROM VARCHAR2(20) DEFAULT 'ALL' ,
  APPLICABLE_TO VARCHAR2(500),
  CONDITION_TYPE VARCHAR2(20),
  CONDITION_VALUE NUMBER(5,2),
  ACTION_TYPE VARCHAR2(20),
  ACTION_VALUE NUMBER(5,2),
  IS_ACTIVE NUMBER(1) DEFAULT 1 ,
  DESCRIPTION VARCHAR2(500),
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RULE_ID),
  CONSTRAINT SYS_C0047081 CHECK ("RULE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047082 CHECK ("RULE_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0047083 CHECK ("RULE_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0047084 CHECK (RULE_TYPE IN ('LATE', 'EARLY_LEAVE', 'OVERTIME', 'ABSENT', 'HALF_DAY')),
  CONSTRAINT SYS_C0047085 CHECK (APPLICABLE_FROM IN ('ALL', 'DEPARTMENT', 'DESIGNATION', 'EMPLOYEE')),
  CONSTRAINT SYS_C0047086 CHECK (CONDITION_TYPE IN ('MINUTES', 'PERCENTAGE', 'HOURS')),
  CONSTRAINT SYS_C0047087 CHECK (ACTION_TYPE IN ('WARNING', 'DEDUCTION', 'OVERTIME', 'LEAVE_DEDUCTION')),
  CONSTRAINT SYS_C0047088 CHECK (IS_ACTIVE IN (0, 1))
)`);
    console.log('‚úÖ Created table: HRMS_ATTENDANCE_RULES');
    await executeQuery(`CREATE TABLE HRMS_ATTENDANCE_SETTINGS (
  SETTING_ID NUMBER NOT NULL,
  SETTING_KEY VARCHAR2(100) NOT NULL,
  SETTING_VALUE VARCHAR2(500),
  SETTING_TYPE VARCHAR2(20) DEFAULT 'STRING' ,
  DESCRIPTION VARCHAR2(500),
  IS_ACTIVE NUMBER(1) DEFAULT 1 ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (SETTING_ID),
  CONSTRAINT SYS_C0047135 UNIQUE (SETTING_KEY),
  CONSTRAINT SYS_C0047130 CHECK ("SETTING_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047131 CHECK ("SETTING_KEY" IS NOT NULL),
  CONSTRAINT SYS_C0047132 CHECK (SETTING_TYPE IN ('STRING', 'NUMBER', 'BOOLEAN', 'JSON')),
  CONSTRAINT SYS_C0047133 CHECK (IS_ACTIVE IN (0, 1))
)`);
    console.log('‚úÖ Created table: HRMS_ATTENDANCE_SETTINGS');
    await executeQuery(`CREATE TABLE HRMS_BIOMETRIC_DEVICES (
  DEVICE_ID NUMBER NOT NULL,
  DEVICE_NAME VARCHAR2(100) NOT NULL,
  DEVICE_CODE VARCHAR2(50) NOT NULL,
  DEVICE_TYPE VARCHAR2(20),
  LOCATION VARCHAR2(100),
  IP_ADDRESS VARCHAR2(15),
  PORT_NUMBER NUMBER(5),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  LAST_SYNC_TIME TIMESTAMP(6)(11),
  DEVICE_INFO VARCHAR2(500),
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (DEVICE_ID),
  CONSTRAINT SYS_C0047097 UNIQUE (DEVICE_CODE),
  CONSTRAINT SYS_C0047091 CHECK ("DEVICE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047092 CHECK ("DEVICE_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0047093 CHECK ("DEVICE_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0047094 CHECK (DEVICE_TYPE IN ('FINGERPRINT', 'FACE', 'CARD', 'MOBILE', 'PALM')),
  CONSTRAINT SYS_C0047095 CHECK (STATUS IN ('ACTIVE', 'INACTIVE', 'MAINTENANCE'))
)`);
    console.log('‚úÖ Created table: HRMS_BIOMETRIC_DEVICES');
    await executeQuery(`CREATE TABLE HRMS_CALENDAR (
  CALENDAR_ID NUMBER NOT NULL,
  CALENDAR_CODE VARCHAR2(50) NOT NULL,
  CALENDAR_NAME VARCHAR2(200) NOT NULL,
  IS_ACTIVE NUMBER(1) DEFAULT 1,
  CREATED_BY VARCHAR2(100),
  CREATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_BY VARCHAR2(100),
  UPDATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP
      ,
  DESCRIPTION VARCHAR2(4000),
  WEEKLY_HOLIDAYS VARCHAR2(4000),
  PRIMARY KEY (CALENDAR_ID),
  CONSTRAINT SYS_C0047016 UNIQUE (CALENDAR_CODE),
  CONSTRAINT SYS_C0047012 CHECK ("CALENDAR_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047013 CHECK ("CALENDAR_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0047014 CHECK ("CALENDAR_NAME" IS NOT NULL)
)`);
    console.log('‚úÖ Created table: HRMS_CALENDAR');
    await executeQuery(`CREATE TABLE HRMS_CALENDAR_HOLIDAYS (
  HOLIDAY_ID NUMBER NOT NULL,
  CALENDAR_ID NUMBER NOT NULL,
  HOLIDAY_NAME VARCHAR2(200) NOT NULL,
  HOLIDAY_DATE DATE NOT NULL,
  HOLIDAY_TYPE VARCHAR2(50) DEFAULT 'PUBLIC_HOLIDAY',
  IS_ACTIVE NUMBER(1) DEFAULT 1,
  CREATED_BY VARCHAR2(100),
  CREATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_BY VARCHAR2(100),
  UPDATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  DESCRIPTION VARCHAR2(4000),
  PRIMARY KEY (HOLIDAY_ID),
  CONSTRAINT SYS_C0047017 CHECK ("HOLIDAY_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047018 CHECK ("CALENDAR_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047019 CHECK ("HOLIDAY_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0047020 CHECK ("HOLIDAY_DATE" IS NOT NULL)
)`);
    console.log('‚úÖ Created table: HRMS_CALENDAR_HOLIDAYS');
    await executeQuery(`CREATE TABLE HRMS_COST_CENTERS (
  COST_CENTER_ID NUMBER NOT NULL,
  COST_CENTER_CODE VARCHAR2(20) NOT NULL,
  COST_CENTER_NAME VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(500),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (COST_CENTER_ID),
  CONSTRAINT SYS_C0046363 UNIQUE (COST_CENTER_CODE),
  CONSTRAINT SYS_C0046358 CHECK ("COST_CENTER_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046359 CHECK ("COST_CENTER_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0046360 CHECK ("COST_CENTER_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046361 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_COST_CENTERS');
    await executeQuery(`CREATE TABLE HRMS_DEDUCTIONS (
  DEDUCTION_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  DEDUCTION_TYPE VARCHAR2(50) NOT NULL,
  DEDUCTION_CATEGORY VARCHAR2(50) NOT NULL,
  AMOUNT NUMBER(15,2) NOT NULL,
  DEDUCTION_DATE DATE NOT NULL DEFAULT SYSDATE ,
  EFFECTIVE_FROM_MONTH VARCHAR2(7) NOT NULL,
  EFFECTIVE_TO_MONTH VARCHAR2(7),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  IS_RECURRING CHAR(1) DEFAULT 'N' ,
  RECURRING_MONTHS NUMBER,
  DEDUCTED_AMOUNT NUMBER(15,2) DEFAULT 0,
  REMAINING_AMOUNT NUMBER(15,2),
  ATTACHMENT_URL VARCHAR2(500),
  APPLIED_BY NUMBER NOT NULL,
  APPROVED_BY NUMBER,
  APPROVED_DATE DATE,
  COMMENTS CLOB(4000),
  CREATED_AT DATE DEFAULT SYSDATE,
  UPDATED_AT DATE DEFAULT SYSDATE,
  REASON VARCHAR2(1000) NOT NULL,
  PRIMARY KEY (DEDUCTION_ID),
  CONSTRAINT SYS_C0046617 CHECK (DEDUCTION_TYPE IN ('FINE', 'PENALTY', 'SALARY_ADVANCE_RECOVERY', 'LOAN_RECOVERY', 'MISCELLANEOUS', 'DISCIPLINARY', 'ATTENDANCE', 'OTHER')),
  CONSTRAINT SYS_C0046618 CHECK (DEDUCTION_CATEGORY IN ('STATUTORY', 'VOLUNTARY', 'RECOVERY', 'PENALTY')),
  CONSTRAINT SYS_C0046619 CHECK (AMOUNT > 0),
  CONSTRAINT SYS_C0046620 CHECK (STATUS IN ('ACTIVE', 'COMPLETED', 'CANCELLED', 'PENDING')),
  CONSTRAINT SYS_C0046621 CHECK (IS_RECURRING IN ('Y', 'N')),
  CONSTRAINT SYS_C0046626 CHECK ("REASON" IS NOT NULL),
  CONSTRAINT SYS_C0046608 CHECK ("DEDUCTION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046609 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046610 CHECK ("DEDUCTION_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046611 CHECK ("DEDUCTION_CATEGORY" IS NOT NULL),
  CONSTRAINT SYS_C0046612 CHECK ("AMOUNT" IS NOT NULL),
  CONSTRAINT SYS_C0046614 CHECK ("DEDUCTION_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046615 CHECK ("EFFECTIVE_FROM_MONTH" IS NOT NULL),
  CONSTRAINT SYS_C0046616 CHECK ("APPLIED_BY" IS NOT NULL)
)`);
    console.log('‚úÖ Created table: HRMS_DEDUCTIONS');
    await executeQuery(`CREATE TABLE HRMS_DESIGNATIONS (
  DESIGNATION_ID NUMBER NOT NULL,
  DESIGNATION_NAME VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(500),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (DESIGNATION_ID),
  CONSTRAINT SYS_C0046338 UNIQUE (DESIGNATION_NAME),
  CONSTRAINT SYS_C0046334 CHECK ("DESIGNATION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046335 CHECK ("DESIGNATION_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046336 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_DESIGNATIONS');
    await executeQuery(`CREATE TABLE HRMS_EMPLOYEES (
  EMPLOYEE_ID NUMBER NOT NULL,
  EMPLOYEE_CODE VARCHAR2(20) NOT NULL,
  FIRST_NAME VARCHAR2(50) NOT NULL,
  LAST_NAME VARCHAR2(50) NOT NULL,
  LEGAL_NAME VARCHAR2(100),
  GENDER VARCHAR2(10),
  NATIONALITY VARCHAR2(50),
  DATE_OF_BIRTH DATE,
  BIRTH_PLACE VARCHAR2(100),
  AVATAR_URL VARCHAR2(500),
  REPORT_TO_ID NUMBER,
  DESIGNATION VARCHAR2(100),
  ROLE VARCHAR2(100),
  POSITION VARCHAR2(100),
  LOCATION VARCHAR2(100),
  COST_CENTER VARCHAR2(50),
  DATE_OF_JOINING DATE,
  PROBATION_DAYS NUMBER DEFAULT 90,
  CONFIRM_DATE DATE,
  NOTICE_DAYS NUMBER DEFAULT 30,
  PINCODE VARCHAR2(10),
  CITY VARCHAR2(50),
  DISTRICT VARCHAR2(50),
  STATE VARCHAR2(50),
  COUNTRY VARCHAR2(50) DEFAULT 'India',
  PHONE VARCHAR2(20),
  MOBILE VARCHAR2(20),
  EMAIL VARCHAR2(100),
  FATHER_NAME VARCHAR2(100),
  MARITAL_STATUS VARCHAR2(20),
  SPOUSE_NAME VARCHAR2(100),
  RELIGION VARCHAR2(50),
  AADHAR_NUMBER VARCHAR2(12),
  AADHAR_IMAGE_URL VARCHAR2(500),
  PAN_NUMBER VARCHAR2(10),
  PAN_IMAGE_URL VARCHAR2(500),
  DRIVING_LICENSE_NUMBER VARCHAR2(20),
  DRIVING_LICENSE_IMAGE_URL VARCHAR2(500),
  EDUCATION_CERTIFICATE_NUMBER VARCHAR2(50),
  EDUCATION_CERTIFICATE_IMAGE_URL VARCHAR2(500),
  BANK_NAME VARCHAR2(100),
  BRANCH_NAME VARCHAR2(100),
  IFSC_CODE VARCHAR2(11),
  ACCOUNT_NUMBER VARCHAR2(50),
  UAN_NUMBER VARCHAR2(20),
  PF_NUMBER VARCHAR2(20),
  ESI_NUMBER VARCHAR2(20),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  ADDRESS VARCHAR2(500),
  CALENDAR_ID NUMBER,
  SHIFT_ID NUMBER,
  PAY_GRADE_ID NUMBER,
  PRIMARY KEY (EMPLOYEE_ID),
  CONSTRAINT SYS_C0046059 UNIQUE (EMPLOYEE_CODE),
  CONSTRAINT SYS_C0046056 CHECK (MARITAL_STATUS IN ('SINGLE', 'MARRIED', 'DIVORCED', 'WIDOWED')),
  CONSTRAINT SYS_C0046057 CHECK (STATUS IN ('ACTIVE', 'INACTIVE', 'TERMINATED', 'ONBOARDING')),
  CONSTRAINT SYS_C0046051 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046052 CHECK ("EMPLOYEE_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0046053 CHECK ("FIRST_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046054 CHECK ("LAST_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046055 CHECK (GENDER IN ('MALE', 'FEMALE', 'OTHER'))
)`);
    console.log('‚úÖ Created table: HRMS_EMPLOYEES');
    await executeQuery(`CREATE TABLE HRMS_EMPLOYEE_CALENDAR (
  EMPLOYEE_CALENDAR_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  CALENDAR_ID NUMBER NOT NULL,
  EFFECTIVE_FROM DATE NOT NULL,
  EFFECTIVE_TO DATE,
  IS_ACTIVE NUMBER(1) DEFAULT 1,
  CREATED_BY VARCHAR2(100),
  CREATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_BY VARCHAR2(100),
  UPDATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (EMPLOYEE_CALENDAR_ID),
  CONSTRAINT SYS_C0047023 CHECK ("EMPLOYEE_CALENDAR_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047024 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047025 CHECK ("CALENDAR_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047026 CHECK ("EFFECTIVE_FROM" IS NOT NULL)
)`);
    console.log('‚úÖ Created table: HRMS_EMPLOYEE_CALENDAR');
    await executeQuery(`CREATE TABLE HRMS_EMPLOYEE_COMPENSATION (
  COMPENSATION_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  PAY_COMPONENT_ID NUMBER NOT NULL,
  AMOUNT NUMBER(15,2) NOT NULL,
  PERCENTAGE NUMBER(5,2),
  IS_PERCENTAGE NUMBER(1) DEFAULT 0 ,
  EFFECTIVE_DATE DATE NOT NULL,
  END_DATE DATE,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (COMPENSATION_ID),
  CONSTRAINT UK_EMP_PAY_COMPONENT_DATE UNIQUE (EMPLOYEE_ID),
  CONSTRAINT UK_EMP_PAY_COMPONENT_DATE UNIQUE (PAY_COMPONENT_ID),
  CONSTRAINT UK_EMP_PAY_COMPONENT_DATE UNIQUE (EFFECTIVE_DATE),
  CONSTRAINT SYS_C0046807 CHECK ("COMPENSATION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046808 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046809 CHECK ("PAY_COMPONENT_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046810 CHECK ("AMOUNT" IS NOT NULL),
  CONSTRAINT SYS_C0046811 CHECK ("EFFECTIVE_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046812 CHECK (IS_PERCENTAGE IN (0, 1)),
  CONSTRAINT SYS_C0046813 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_EMPLOYEE_COMPENSATION');
    await executeQuery(`CREATE TABLE HRMS_LEAVES (
  LEAVE_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  LEAVE_TYPE VARCHAR2(20) NOT NULL,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL,
  TOTAL_DAYS NUMBER(5,2) NOT NULL,
  REASON VARCHAR2(500) NOT NULL,
  STATUS VARCHAR2(20) DEFAULT 'PENDING' ,
  APPROVED_BY NUMBER,
  APPROVED_AT TIMESTAMP(6)(11),
  APPROVAL_COMMENTS VARCHAR2(500),
  ATTACHMENT_URL VARCHAR2(500),
  CREATED_BY NUMBER NOT NULL,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  AVAILABLE_DAYS NUMBER(5,2) DEFAULT 0,
  PRIMARY KEY (LEAVE_ID),
  CONSTRAINT SYS_C0046522 CHECK ("LEAVE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046523 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046525 CHECK ("LEAVE_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046526 CHECK ("START_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046527 CHECK ("END_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046528 CHECK ("TOTAL_DAYS" IS NOT NULL),
  CONSTRAINT SYS_C0046529 CHECK ("REASON" IS NOT NULL),
  CONSTRAINT SYS_C0046530 CHECK ("CREATED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046531 CHECK (LEAVE_TYPE IN ('ANNUAL', 'SICK', 'CASUAL', 'MATERNITY', 'PATERNITY', 'BEREAVEMENT', 'COMPENSATORY', 'UNPAID')),
  CONSTRAINT CHK_LEAVE_STATUS CHECK (STATUS IN ('PENDING', 'APPROVED', 'REJECTED', 'CANCELLED', 'ON_LEAVE', 'RESUMED'))
)`);
    console.log('‚úÖ Created table: HRMS_LEAVES');
    await executeQuery(`CREATE TABLE HRMS_LEAVE_BALANCE (
  BALANCE_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  LEAVE_TYPE VARCHAR2(20) NOT NULL,
  YEAR NUMBER(4) NOT NULL,
  TOTAL_LEAVES NUMBER(5,2) DEFAULT 0,
  USED_LEAVES NUMBER(5,2) DEFAULT 0,
  BALANCE_LEAVES NUMBER(5,2) DEFAULT 0,
  CARRIED_FORWARD NUMBER(5,2) DEFAULT 0,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (BALANCE_ID),
  CONSTRAINT UQ_LEAVE_BALANCE_EMPLOYEE_TYPE_YEAR UNIQUE (EMPLOYEE_ID),
  CONSTRAINT UQ_LEAVE_BALANCE_EMPLOYEE_TYPE_YEAR UNIQUE (LEAVE_TYPE),
  CONSTRAINT UQ_LEAVE_BALANCE_EMPLOYEE_TYPE_YEAR UNIQUE (YEAR),
  CONSTRAINT SYS_C0047108 CHECK ("BALANCE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047109 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047110 CHECK ("LEAVE_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0047111 CHECK ("YEAR" IS NOT NULL)
)`);
    console.log('‚úÖ Created table: HRMS_LEAVE_BALANCE');
    await executeQuery(`CREATE TABLE HRMS_LEAVE_POLICIES (
  LEAVE_POLICY_ID NUMBER NOT NULL,
  LEAVE_CODE VARCHAR2(5) NOT NULL,
  POLICY_NAME VARCHAR2(100) NOT NULL,
  LEAVE_TYPE VARCHAR2(20) NOT NULL,
  DESCRIPTION VARCHAR2(500),
  DEFAULT_DAYS NUMBER DEFAULT 0,
  MAX_DAYS NUMBER DEFAULT 0,
  MIN_DAYS NUMBER DEFAULT 0,
  CARRY_FORWARD_DAYS NUMBER DEFAULT 0,
  CARRY_FORWARD_EXPIRY_MONTHS NUMBER DEFAULT 12,
  IS_PAID VARCHAR2(1) DEFAULT 'Y' ,
  REQUIRES_APPROVAL VARCHAR2(1) DEFAULT 'Y' ,
  ALLOW_HALF_DAY VARCHAR2(1) DEFAULT 'N' ,
  ALLOW_ATTACHMENT VARCHAR2(1) DEFAULT 'N' ,
  APPLICABLE_FROM_MONTHS NUMBER DEFAULT 0,
  APPLICABLE_FROM_DAYS NUMBER DEFAULT 0,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (LEAVE_POLICY_ID),
  CONSTRAINT SYS_C0046401 UNIQUE (LEAVE_CODE),
  CONSTRAINT SYS_C0046390 CHECK ("LEAVE_POLICY_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046391 CHECK ("LEAVE_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0046392 CHECK ("POLICY_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046393 CHECK ("LEAVE_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046394 CHECK (LEAVE_TYPE IN ('ANNUAL', 'SICK', 'CASUAL', 'MATERNITY', 'PATERNITY', 'BEREAVEMENT', 'COMPENSATORY', 'UNPAID')),
  CONSTRAINT SYS_C0046395 CHECK (IS_PAID IN ('Y', 'N')),
  CONSTRAINT SYS_C0046396 CHECK (REQUIRES_APPROVAL IN ('Y', 'N')),
  CONSTRAINT SYS_C0046397 CHECK (ALLOW_HALF_DAY IN ('Y', 'N')),
  CONSTRAINT SYS_C0046398 CHECK (ALLOW_ATTACHMENT IN ('Y', 'N')),
  CONSTRAINT SYS_C0046399 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_LEAVE_POLICIES');
    await executeQuery(`CREATE TABLE HRMS_LEAVE_RESUMPTIONS (
  RESUMPTION_ID NUMBER NOT NULL,
  LEAVE_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  PLANNED_RESUMPTION_DATE DATE NOT NULL,
  ACTUAL_RESUMPTION_DATE DATE NOT NULL,
  RESUMPTION_TYPE VARCHAR2(20) NOT NULL,
  REASON VARCHAR2(500),
  ATTACHMENT_URL VARCHAR2(500),
  STATUS VARCHAR2(20) DEFAULT 'PENDING' ,
  APPLIED_BY NUMBER NOT NULL,
  APPROVED_BY NUMBER,
  APPROVED_AT TIMESTAMP(6)(11),
  APPROVAL_COMMENTS VARCHAR2(500),
  IS_AUTO_APPROVED NUMBER(1) DEFAULT 0 ,
  ATTENDANCE_UPDATED NUMBER(1) DEFAULT 0 ,
  PAYROLL_UPDATED NUMBER(1) DEFAULT 0 ,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RESUMPTION_ID),
  CONSTRAINT SYS_C0046550 CHECK ("RESUMPTION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046551 CHECK ("LEAVE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046552 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046553 CHECK ("PLANNED_RESUMPTION_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046554 CHECK ("ACTUAL_RESUMPTION_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046555 CHECK ("RESUMPTION_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046556 CHECK ("APPLIED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046557 CHECK (RESUMPTION_TYPE IN ('EARLY', 'ON_TIME', 'EXTENDED')),
  CONSTRAINT SYS_C0046558 CHECK (STATUS IN ('PENDING', 'APPROVED', 'REJECTED')),
  CONSTRAINT SYS_C0046559 CHECK (IS_AUTO_APPROVED IN (0, 1)),
  CONSTRAINT SYS_C0046560 CHECK (ATTENDANCE_UPDATED IN (0, 1)),
  CONSTRAINT SYS_C0046561 CHECK (PAYROLL_UPDATED IN (0, 1))
)`);
    console.log('‚úÖ Created table: HRMS_LEAVE_RESUMPTIONS');
    await executeQuery(`CREATE TABLE HRMS_LOANS (
  LOAN_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  LOAN_TYPE VARCHAR2(50) NOT NULL,
  LOAN_AMOUNT NUMBER(10,2) NOT NULL,
  MONTHLY_DEDUCTION_AMOUNT NUMBER(10,2) NOT NULL,
  TOTAL_MONTHS NUMBER(3) NOT NULL,
  REASON VARCHAR2(500) NOT NULL,
  LOAN_DATE DATE DEFAULT SYSDATE,
  FIRST_DEDUCTION_MONTH VARCHAR2(20),
  LAST_DEDUCTION_MONTH VARCHAR2(20),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER NOT NULL,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (LOAN_ID),
  CONSTRAINT SYS_C0046467 CHECK ("LOAN_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046468 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046469 CHECK ("LOAN_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046470 CHECK ("LOAN_AMOUNT" IS NOT NULL),
  CONSTRAINT SYS_C0046471 CHECK ("MONTHLY_DEDUCTION_AMOUNT" IS NOT NULL),
  CONSTRAINT SYS_C0046472 CHECK ("TOTAL_MONTHS" IS NOT NULL),
  CONSTRAINT SYS_C0046473 CHECK ("REASON" IS NOT NULL),
  CONSTRAINT SYS_C0046474 CHECK ("CREATED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046475 CHECK (LOAN_TYPE IN ('PERSONAL', 'HOME', 'VEHICLE', 'EDUCATION', 'MEDICAL', 'OTHER')),
  CONSTRAINT SYS_C0046476 CHECK (STATUS IN ('ACTIVE', 'COMPLETED', 'CANCELLED'))
)`);
    console.log('‚úÖ Created table: HRMS_LOANS');
    await executeQuery(`CREATE TABLE HRMS_LOCATIONS (
  LOCATION_ID NUMBER NOT NULL,
  LOCATION_NAME VARCHAR2(100) NOT NULL,
  ADDRESS VARCHAR2(500),
  CITY VARCHAR2(50),
  STATE VARCHAR2(50),
  COUNTRY VARCHAR2(50) DEFAULT 'India',
  PINCODE VARCHAR2(10),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (LOCATION_ID),
  CONSTRAINT SYS_C0046356 UNIQUE (LOCATION_NAME),
  CONSTRAINT SYS_C0046352 CHECK ("LOCATION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046353 CHECK ("LOCATION_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046354 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_LOCATIONS');
    await executeQuery(`CREATE TABLE HRMS_NAMED_HOLIDAY_TEMPLATES (
  TEMPLATE_ID NUMBER NOT NULL,
  TEMPLATE_NAME VARCHAR2(200) NOT NULL,
  TEMPLATE_CODE VARCHAR2(50) NOT NULL,
  HOLIDAY_TYPE VARCHAR2(50) DEFAULT 'PUBLIC_HOLIDAY',
  PATTERN_TYPE VARCHAR2(50) NOT NULL,
  PATTERN_CONFIG CLOB(4000),
  DESCRIPTION CLOB(4000),
  IS_ACTIVE NUMBER(1) DEFAULT 1,
  CREATED_BY VARCHAR2(100),
  CREATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_BY VARCHAR2(100),
  UPDATED_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP
      ,
  PRIMARY KEY (TEMPLATE_ID),
  CONSTRAINT SYS_C0047035 UNIQUE (TEMPLATE_CODE),
  CONSTRAINT SYS_C0047030 CHECK ("TEMPLATE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047031 CHECK ("TEMPLATE_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0047032 CHECK ("TEMPLATE_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0047033 CHECK ("PATTERN_TYPE" IS NOT NULL)
)`);
    console.log('‚úÖ Created table: HRMS_NAMED_HOLIDAY_TEMPLATES');
    await executeQuery(`CREATE TABLE HRMS_OVERTIME (
  OVERTIME_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  ATTENDANCE_ID NUMBER,
  OVERTIME_DATE DATE NOT NULL,
  START_TIME VARCHAR2(5) NOT NULL,
  END_TIME VARCHAR2(5) NOT NULL,
  HOURS_WORKED NUMBER(5,2) NOT NULL,
  OVERTIME_HOURS NUMBER(5,2) NOT NULL,
  RATE_TYPE VARCHAR2(20) DEFAULT 'NORMAL' ,
  RATE_MULTIPLIER NUMBER(3,2) DEFAULT 1.5,
  REASON VARCHAR2(500),
  STATUS VARCHAR2(20) DEFAULT 'PENDING' ,
  APPROVED_BY NUMBER,
  APPROVED_AT TIMESTAMP(6)(11),
  APPROVAL_REMARKS VARCHAR2(500),
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (OVERTIME_ID),
  CONSTRAINT SYS_C0047116 CHECK ("OVERTIME_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047117 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047118 CHECK ("OVERTIME_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0047119 CHECK ("START_TIME" IS NOT NULL),
  CONSTRAINT SYS_C0047120 CHECK ("END_TIME" IS NOT NULL),
  CONSTRAINT SYS_C0047121 CHECK ("HOURS_WORKED" IS NOT NULL),
  CONSTRAINT SYS_C0047122 CHECK ("OVERTIME_HOURS" IS NOT NULL),
  CONSTRAINT SYS_C0047123 CHECK (RATE_TYPE IN ('NORMAL', 'HOLIDAY', 'NIGHT')),
  CONSTRAINT SYS_C0047124 CHECK (STATUS IN ('PENDING', 'APPROVED', 'REJECTED'))
)`);
    console.log('‚úÖ Created table: HRMS_OVERTIME');
    await executeQuery(`CREATE TABLE HRMS_PAYROLL_APPROVALS (
  APPROVAL_ID NUMBER NOT NULL,
  PAYROLL_ID NUMBER,
  PERIOD_ID NUMBER,
  APPROVAL_LEVEL NUMBER(2) DEFAULT 1,
  APPROVAL_TYPE VARCHAR2(20) NOT NULL,
  STATUS VARCHAR2(20) DEFAULT 'PENDING' ,
  APPROVED_BY NUMBER,
  APPROVED_AT TIMESTAMP(6)(11),
  COMMENTS VARCHAR2(1000),
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (APPROVAL_ID),
  CONSTRAINT SYS_C0047219 CHECK ("APPROVAL_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047220 CHECK ("APPROVAL_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0047221 CHECK (APPROVAL_TYPE IN ('PERIOD', 'PAYROLL', 'PAYMENT')),
  CONSTRAINT SYS_C0047222 CHECK (STATUS IN ('PENDING', 'APPROVED', 'REJECTED'))
)`);
    console.log('‚úÖ Created table: HRMS_PAYROLL_APPROVALS');
    await executeQuery(`CREATE TABLE HRMS_PAYROLL_DEDUCTIONS (
  DEDUCTION_ID NUMBER NOT NULL,
  PAYROLL_ID NUMBER NOT NULL,
  DEDUCTION_TYPE VARCHAR2(50) NOT NULL,
  REFERENCE_ID NUMBER,
  REFERENCE_TYPE VARCHAR2(50),
  AMOUNT NUMBER(15,2) NOT NULL,
  RATE NUMBER(5,2),
  DESCRIPTION VARCHAR2(500),
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (DEDUCTION_ID),
  CONSTRAINT SYS_C0047197 CHECK ("DEDUCTION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047198 CHECK ("PAYROLL_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047199 CHECK ("DEDUCTION_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0047200 CHECK ("AMOUNT" IS NOT NULL),
  CONSTRAINT SYS_C0047201 CHECK (DEDUCTION_TYPE IN ('PF', 'ESI', 'TAX', 'ADVANCE', 'LOAN', 'LATE', 'OTHER'))
)`);
    console.log('‚úÖ Created table: HRMS_PAYROLL_DEDUCTIONS');
    
    // Create sequence for PAYROLL_DEDUCTIONS
    await executeQuery(`CREATE SEQUENCE HRMS_PAYROLL_DEDUCTIONS_SEQ START WITH 1 INCREMENT BY 1`);
    console.log('‚úÖ Created sequence: HRMS_PAYROLL_DEDUCTIONS_SEQ');
    
    // Create sequence for PAYROLL_DETAILS
    await executeQuery(`CREATE SEQUENCE HRMS_PAYROLL_DETAILS_SEQ START WITH 1 INCREMENT BY 1`);
    console.log('‚úÖ Created sequence: HRMS_PAYROLL_DETAILS_SEQ');
    
    await executeQuery(`CREATE TABLE HRMS_PAYROLL_DETAILS (
  PAYROLL_ID NUMBER NOT NULL,
  PERIOD_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  RUN_ID NUMBER,
  BASIC_SALARY NUMBER(15,2) NOT NULL,
  GROSS_SALARY NUMBER(15,2) NOT NULL,
  NET_SALARY NUMBER(15,2) NOT NULL,
  TOTAL_EARNINGS NUMBER(15,2) DEFAULT 0,
  TOTAL_DEDUCTIONS NUMBER(15,2) DEFAULT 0,
  TOTAL_TAXES NUMBER(15,2) DEFAULT 0,
  WORK_DAYS NUMBER(3) DEFAULT 0,
  PRESENT_DAYS NUMBER(3) DEFAULT 0,
  ABSENT_DAYS NUMBER(3) DEFAULT 0,
  LEAVE_DAYS NUMBER(3) DEFAULT 0,
  OVERTIME_HOURS NUMBER(5,2) DEFAULT 0,
  OVERTIME_AMOUNT NUMBER(15,2) DEFAULT 0,
  LATE_DAYS NUMBER(3) DEFAULT 0,
  LATE_DEDUCTION NUMBER(15,2) DEFAULT 0,
  ADVANCE_AMOUNT NUMBER(15,2) DEFAULT 0,
  LOAN_DEDUCTION NUMBER(15,2) DEFAULT 0,
  OTHER_DEDUCTIONS NUMBER(15,2) DEFAULT 0,
  BONUS_AMOUNT NUMBER(15,2) DEFAULT 0,
  ALLOWANCE_AMOUNT NUMBER(15,2) DEFAULT 0,
  REMARKS VARCHAR2(1000),
  STATUS VARCHAR2(20) DEFAULT 'DRAFT' ,
  APPROVED_BY NUMBER,
  APPROVED_AT TIMESTAMP(6)(11),
  PAID_AT TIMESTAMP(6)(11),
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (PAYROLL_ID),
  CONSTRAINT UQ_PAYROLL_EMPLOYEE_PERIOD UNIQUE (EMPLOYEE_ID, PERIOD_ID),
  CONSTRAINT SYS_C0047183 CHECK ("PAYROLL_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047184 CHECK ("PERIOD_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047185 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047186 CHECK ("BASIC_SALARY" IS NOT NULL),
  CONSTRAINT SYS_C0047187 CHECK ("GROSS_SALARY" IS NOT NULL),
  CONSTRAINT SYS_C0047188 CHECK ("NET_SALARY" IS NOT NULL),
  CONSTRAINT SYS_C0047189 CHECK (STATUS IN ('DRAFT', 'CALCULATED', 'APPROVED', 'PAID', 'CANCELLED'))
)`);
    console.log('‚úÖ Created table: HRMS_PAYROLL_DETAILS');
    
    // Create sequence for PAYROLL_EARNINGS
    await executeQuery(`CREATE SEQUENCE HRMS_PAYROLL_EARNINGS_SEQ START WITH 1 INCREMENT BY 1`);
    console.log('‚úÖ Created sequence: HRMS_PAYROLL_EARNINGS_SEQ');
    
    await executeQuery(`CREATE TABLE HRMS_PAYROLL_EARNINGS (
  EARNING_ID NUMBER NOT NULL,
  PAYROLL_ID NUMBER NOT NULL,
  PAY_COMPONENT_ID NUMBER,
  EARNING_TYPE VARCHAR2(50) NOT NULL,
  AMOUNT NUMBER(15,2) NOT NULL,
  RATE NUMBER(5,2),
  HOURS NUMBER(5,2),
  DESCRIPTION VARCHAR2(500),
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (EARNING_ID),
  CONSTRAINT SYS_C0047204 CHECK ("EARNING_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047205 CHECK ("PAYROLL_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047206 CHECK ("EARNING_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0047207 CHECK ("AMOUNT" IS NOT NULL),
  CONSTRAINT SYS_C0047208 CHECK (EARNING_TYPE IN ('BASIC', 'HRA', 'DA', 'TA', 'OVERTIME', 'BONUS', 'ALLOWANCE', 'OTHER'))
)`);
    console.log('‚úÖ Created table: HRMS_PAYROLL_EARNINGS');
    await executeQuery(`CREATE TABLE HRMS_PAYROLL_PERIODS (
  PERIOD_ID NUMBER NOT NULL,
  PERIOD_NAME VARCHAR2(100) NOT NULL,
  PERIOD_TYPE VARCHAR2(20) DEFAULT 'MONTHLY' ,
  START_DATE DATE NOT NULL,
  END_DATE DATE NOT NULL,
  PAY_DATE DATE NOT NULL,
  STATUS VARCHAR2(20) DEFAULT 'DRAFT' ,
  TOTAL_EMPLOYEES NUMBER DEFAULT 0,
  TOTAL_GROSS_PAY NUMBER(15,2) DEFAULT 0,
  TOTAL_NET_PAY NUMBER(15,2) DEFAULT 0,
  TOTAL_DEDUCTIONS NUMBER(15,2) DEFAULT 0,
  TOTAL_TAXES NUMBER(15,2) DEFAULT 0,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (PERIOD_ID),
  CONSTRAINT UQ_PAYROLL_PERIOD_DATES UNIQUE (START_DATE),
  CONSTRAINT UQ_PAYROLL_PERIOD_DATES UNIQUE (END_DATE),
  CONSTRAINT SYS_C0047165 CHECK ("PERIOD_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047166 CHECK ("PERIOD_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0047167 CHECK ("START_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0047168 CHECK ("END_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0047169 CHECK ("PAY_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0047170 CHECK (PERIOD_TYPE IN ('WEEKLY', 'BIWEEKLY', 'MONTHLY', 'QUARTERLY')),
  CONSTRAINT SYS_C0047171 CHECK (STATUS IN ('DRAFT', 'PROCESSING', 'COMPLETED', 'APPROVED', 'PAID', 'CANCELLED'))
)`);
    console.log('‚úÖ Created table: HRMS_PAYROLL_PERIODS');
    await executeQuery(`CREATE TABLE HRMS_PAYROLL_RUNS (
  RUN_ID NUMBER NOT NULL,
  PERIOD_ID NUMBER NOT NULL,
  RUN_NAME VARCHAR2(100) NOT NULL,
  RUN_TYPE VARCHAR2(20) DEFAULT 'FULL' ,
  RUN_DATE TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  STATUS VARCHAR2(30) DEFAULT 'IN_PROGRESS' ,
  TOTAL_EMPLOYEES_PROCESSED NUMBER DEFAULT 0,
  TOTAL_EMPLOYEES_FAILED NUMBER DEFAULT 0,
  PROCESSING_TIME_SECONDS NUMBER,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  COMPLETED_AT TIMESTAMP(6)(11),
  ERROR_MESSAGE VARCHAR2(4000),
  PRIMARY KEY (RUN_ID),
  CONSTRAINT CK_PAYROLL_RUNS_STATUS_NEW CHECK (STATUS IN ('IN_PROGRESS', 'COMPLETED', 'COMPLETED_WITH_ERRORS', 'FAILED', 'CANCELLED')),
  CONSTRAINT SYS_C0047175 CHECK ("RUN_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047176 CHECK ("PERIOD_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047177 CHECK ("RUN_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0047178 CHECK (RUN_TYPE IN ('FULL', 'PARTIAL', 'CORRECTION'))
)`);
    console.log('‚úÖ Created table: HRMS_PAYROLL_RUNS');
    await executeQuery(`CREATE TABLE HRMS_PAYROLL_SETTINGS (
  SETTING_ID NUMBER NOT NULL,
  SETTING_KEY VARCHAR2(100) NOT NULL,
  SETTING_VALUE VARCHAR2(500),
  SETTING_TYPE VARCHAR2(20) DEFAULT 'STRING' ,
  DESCRIPTION VARCHAR2(500),
  IS_ACTIVE NUMBER(1) DEFAULT 1 ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (SETTING_ID),
  CONSTRAINT SYS_C0047217 UNIQUE (SETTING_KEY),
  CONSTRAINT SYS_C0047212 CHECK ("SETTING_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047213 CHECK ("SETTING_KEY" IS NOT NULL),
  CONSTRAINT SYS_C0047214 CHECK (SETTING_TYPE IN ('STRING', 'NUMBER', 'BOOLEAN', 'JSON')),
  CONSTRAINT SYS_C0047215 CHECK (IS_ACTIVE IN (0, 1))
)`);
    console.log('‚úÖ Created table: HRMS_PAYROLL_SETTINGS');
    await executeQuery(`CREATE TABLE HRMS_PAY_COMPONENTS (
  PAY_COMPONENT_ID NUMBER NOT NULL,
  COMPONENT_CODE VARCHAR2(20) NOT NULL,
  COMPONENT_NAME VARCHAR2(100) NOT NULL,
  COMPONENT_TYPE VARCHAR2(20) NOT NULL,
  DESCRIPTION VARCHAR2(500),
  IS_TAXABLE VARCHAR2(1) DEFAULT 'N' ,
  IS_PF_APPLICABLE VARCHAR2(1) DEFAULT 'N' ,
  IS_ESI_APPLICABLE VARCHAR2(1) DEFAULT 'N' ,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (PAY_COMPONENT_ID),
  CONSTRAINT SYS_C0046375 UNIQUE (COMPONENT_CODE),
  CONSTRAINT SYS_C0046365 CHECK ("PAY_COMPONENT_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046366 CHECK ("COMPONENT_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0046367 CHECK ("COMPONENT_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046368 CHECK ("COMPONENT_TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046369 CHECK (COMPONENT_TYPE IN ('EARNING', 'DEDUCTION', 'ALLOWANCE', 'BONUS')),
  CONSTRAINT SYS_C0046370 CHECK (IS_TAXABLE IN ('Y', 'N')),
  CONSTRAINT SYS_C0046371 CHECK (IS_PF_APPLICABLE IN ('Y', 'N')),
  CONSTRAINT SYS_C0046372 CHECK (IS_ESI_APPLICABLE IN ('Y', 'N')),
  CONSTRAINT SYS_C0046373 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_PAY_COMPONENTS');
    await executeQuery(`CREATE TABLE HRMS_PAY_GRADES (
  PAY_GRADE_ID NUMBER NOT NULL,
  GRADE_CODE VARCHAR2(20) NOT NULL,
  GRADE_NAME VARCHAR2(100) NOT NULL,
  MIN_SALARY NUMBER(10,2) NOT NULL,
  MAX_SALARY NUMBER(10,2) NOT NULL,
  MID_SALARY NUMBER(10,2),
  DESCRIPTION VARCHAR2(500),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (PAY_GRADE_ID),
  CONSTRAINT SYS_C0047065 UNIQUE (GRADE_CODE),
  CONSTRAINT SYS_C0047057 CHECK ("PAY_GRADE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0047058 CHECK ("GRADE_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0047059 CHECK ("GRADE_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0047060 CHECK ("MIN_SALARY" IS NOT NULL),
  CONSTRAINT SYS_C0047061 CHECK ("MAX_SALARY" IS NOT NULL),
  CONSTRAINT SYS_C0047062 CHECK (STATUS IN ('ACTIVE', 'INACTIVE')),
  CONSTRAINT CHK_PAY_GRADE_SALARY CHECK (MIN_SALARY <= MAX_SALARY)
)`);
    console.log('‚úÖ Created table: HRMS_PAY_GRADES');
    await executeQuery(`CREATE TABLE HRMS_POSITIONS (
  POSITION_ID NUMBER NOT NULL,
  POSITION_NAME VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(500),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (POSITION_ID),
  CONSTRAINT SYS_C0046350 UNIQUE (POSITION_NAME),
  CONSTRAINT SYS_C0046346 CHECK ("POSITION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046347 CHECK ("POSITION_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046348 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_POSITIONS');
    await executeQuery(`CREATE TABLE HRMS_PROJECTS (
  PROJECT_ID NUMBER NOT NULL,
  PROJECT_CODE VARCHAR2(50) NOT NULL,
  PROJECT_NAME VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(500),
  CLIENT_NAME VARCHAR2(100),
  PROJECT_MANAGER NUMBER,
  START_DATE DATE,
  END_DATE DATE,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  IS_BILLABLE NUMBER(1) DEFAULT 1 ,
  HOURLY_RATE NUMBER(10,2) DEFAULT 0,
  BUDGET_HOURS NUMBER(10,2),
  CREATED_BY NUMBER NOT NULL,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (PROJECT_ID),
  CONSTRAINT SYS_C0046662 UNIQUE (PROJECT_CODE),
  CONSTRAINT SYS_C0046655 CHECK ("PROJECT_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046656 CHECK ("PROJECT_CODE" IS NOT NULL),
  CONSTRAINT SYS_C0046657 CHECK ("PROJECT_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046658 CHECK ("CREATED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046659 CHECK (STATUS IN ('ACTIVE', 'INACTIVE', 'COMPLETED', 'CANCELLED')),
  CONSTRAINT SYS_C0046660 CHECK (IS_BILLABLE IN (0, 1))
)`);
    console.log('‚úÖ Created table: HRMS_PROJECTS');
    await executeQuery(`CREATE TABLE HRMS_RESIGNATIONS (
  RESIGNATION_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  TYPE VARCHAR2(20) NOT NULL,
  REASON VARCHAR2(1000) NOT NULL,
  NOTICE_DATE DATE NOT NULL,
  LAST_WORKING_DATE DATE NOT NULL,
  STATUS VARCHAR2(20) DEFAULT 'PENDING' ,
  COMMENTS VARCHAR2(1000),
  ATTACHMENT_URL VARCHAR2(500),
  CREATED_BY NUMBER NOT NULL,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (RESIGNATION_ID),
  CONSTRAINT SYS_C0046596 CHECK ("RESIGNATION_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046597 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046598 CHECK ("TYPE" IS NOT NULL),
  CONSTRAINT SYS_C0046599 CHECK ("REASON" IS NOT NULL),
  CONSTRAINT SYS_C0046600 CHECK ("NOTICE_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046601 CHECK ("LAST_WORKING_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046602 CHECK ("CREATED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046603 CHECK (TYPE IN ('RESIGNATION', 'TERMINATION')),
  CONSTRAINT SYS_C0046604 CHECK (STATUS IN ('PENDING', 'APPROVED', 'REJECTED', 'WITHDRAWN'))
)`);
    console.log('‚úÖ Created table: HRMS_RESIGNATIONS');
    await executeQuery(`CREATE TABLE HRMS_ROLES (
  ROLE_ID NUMBER NOT NULL,
  ROLE_NAME VARCHAR2(100) NOT NULL,
  DESCRIPTION VARCHAR2(500),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  CREATED_BY NUMBER,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ROLE_ID),
  CONSTRAINT SYS_C0046344 UNIQUE (ROLE_NAME),
  CONSTRAINT SYS_C0046340 CHECK ("ROLE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046341 CHECK ("ROLE_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046342 CHECK (STATUS IN ('ACTIVE', 'INACTIVE'))
)`);
    console.log('‚úÖ Created table: HRMS_ROLES');
    await executeQuery(`CREATE TABLE HRMS_SHIFTS (
  SHIFT_ID NUMBER NOT NULL,
  SHIFT_NAME VARCHAR2(100) NOT NULL,
  START_TIME VARCHAR2(5) NOT NULL,
  END_TIME VARCHAR2(5) NOT NULL,
  DESCRIPTION VARCHAR2(255),
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  OVERTIME_APPLICABLE NUMBER(1) DEFAULT 0 ,
  OVERTIME_CAP_HOURS NUMBER(5,2),
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP
      ,
  FLEXIBLE_TIME_APPLICABLE NUMBER(1) DEFAULT 0 ,
  LATE_COMING_TOLERANCE NUMBER(3) DEFAULT 0 ,
  EARLY_GOING_TOLERANCE NUMBER(3) DEFAULT 0 ,
  PRIMARY KEY (SHIFT_ID),
  CONSTRAINT SYS_C0046697 UNIQUE (SHIFT_NAME),
  CONSTRAINT SYS_C0046690 CHECK ("SHIFT_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046691 CHECK ("SHIFT_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046692 CHECK ("START_TIME" IS NOT NULL),
  CONSTRAINT SYS_C0046693 CHECK ("END_TIME" IS NOT NULL),
  CONSTRAINT SYS_C0046694 CHECK (STATUS IN ('ACTIVE', 'INACTIVE')),
  CONSTRAINT SYS_C0046695 CHECK (OVERTIME_APPLICABLE IN (0, 1)),
  CONSTRAINT SYS_C0046804 CHECK (FLEXIBLE_TIME_APPLICABLE IN (0, 1)),
  CONSTRAINT SYS_C0046805 CHECK (LATE_COMING_TOLERANCE BETWEEN 0 AND 60),
  CONSTRAINT SYS_C0046806 CHECK (EARLY_GOING_TOLERANCE BETWEEN 0 AND 60)
)`);
    console.log('‚úÖ Created table: HRMS_SHIFTS');
    await executeQuery(`CREATE TABLE HRMS_TIMESHEETS (
  TIMESHEET_ID NUMBER NOT NULL,
  EMPLOYEE_ID NUMBER NOT NULL,
  TIMESHEET_DATE DATE NOT NULL,
  WEEK_START_DATE DATE NOT NULL,
  WEEK_END_DATE DATE NOT NULL,
  TOTAL_HOURS NUMBER(5,2) DEFAULT 0,
  BREAK_HOURS NUMBER(5,2) DEFAULT 0,
  OVERTIME_HOURS NUMBER(5,2) DEFAULT 0,
  STATUS VARCHAR2(20) DEFAULT 'DRAFT' ,
  SUBMITTED_AT TIMESTAMP(6)(11),
  APPROVED_BY NUMBER,
  APPROVED_AT TIMESTAMP(6)(11),
  APPROVAL_COMMENTS VARCHAR2(500),
  REJECTION_REASON VARCHAR2(500),
  CREATED_BY NUMBER NOT NULL,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (TIMESHEET_ID),
  CONSTRAINT UK_TIMESHEET_EMP_DATE UNIQUE (EMPLOYEE_ID),
  CONSTRAINT UK_TIMESHEET_EMP_DATE UNIQUE (TIMESHEET_DATE),
  CONSTRAINT SYS_C0046665 CHECK ("TIMESHEET_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046666 CHECK ("EMPLOYEE_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046667 CHECK ("TIMESHEET_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046668 CHECK ("WEEK_START_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046669 CHECK ("WEEK_END_DATE" IS NOT NULL),
  CONSTRAINT SYS_C0046670 CHECK ("CREATED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046671 CHECK (STATUS IN ('DRAFT', 'SUBMITTED', 'APPROVED', 'REJECTED'))
)`);
    console.log('‚úÖ Created table: HRMS_TIMESHEETS');
    await executeQuery(`CREATE TABLE HRMS_TIMESHEET_ENTRIES (
  ENTRY_ID NUMBER NOT NULL,
  TIMESHEET_ID NUMBER NOT NULL,
  PROJECT_ID NUMBER,
  TASK_DESCRIPTION VARCHAR2(500) NOT NULL,
  START_TIME TIMESTAMP(6)(11),
  END_TIME TIMESTAMP(6)(11),
  TOTAL_HOURS NUMBER(5,2) NOT NULL,
  BREAK_HOURS NUMBER(5,2) DEFAULT 0,
  OVERTIME_HOURS NUMBER(5,2) DEFAULT 0,
  IS_BILLABLE NUMBER(1) DEFAULT 1 ,
  ACTIVITY_TYPE VARCHAR2(50) DEFAULT 'DEVELOPMENT' ,
  COMMENTS VARCHAR2(1000),
  CREATED_BY NUMBER NOT NULL,
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (ENTRY_ID),
  CONSTRAINT SYS_C0046677 CHECK ("ENTRY_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046678 CHECK ("TIMESHEET_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046679 CHECK ("TASK_DESCRIPTION" IS NOT NULL),
  CONSTRAINT SYS_C0046680 CHECK ("TOTAL_HOURS" IS NOT NULL),
  CONSTRAINT SYS_C0046681 CHECK ("CREATED_BY" IS NOT NULL),
  CONSTRAINT SYS_C0046682 CHECK (IS_BILLABLE IN (0, 1)),
  CONSTRAINT SYS_C0046683 CHECK (
          ACTIVITY_TYPE IN ('DEVELOPMENT', 'TESTING', 'MEETING', 'DOCUMENTATION', 'TRAINING', 'SUPPORT', 'RESEARCH', 'OTHER')
        ),
  CONSTRAINT CHK_ENTRY_HOURS_POSITIVE CHECK (TOTAL_HOURS > 0),
  CONSTRAINT CHK_ENTRY_TIME_LOGICAL CHECK (END_TIME > START_TIME OR (START_TIME IS NULL AND END_TIME IS NULL))
)`);
    console.log('‚úÖ Created table: HRMS_TIMESHEET_ENTRIES');
    await executeQuery(`CREATE TABLE HRMS_USERS (
  USER_ID NUMBER NOT NULL,
  USERNAME VARCHAR2(50) NOT NULL,
  EMAIL VARCHAR2(100) NOT NULL,
  PASSWORD_HASH VARCHAR2(255) NOT NULL,
  FIRST_NAME VARCHAR2(50) NOT NULL,
  LAST_NAME VARCHAR2(50) NOT NULL,
  ROLE VARCHAR2(20) DEFAULT 'EMPLOYEE' ,
  STATUS VARCHAR2(20) DEFAULT 'ACTIVE' ,
  LAST_LOGIN TIMESTAMP(6)(11),
  CREATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP,
  UPDATED_AT TIMESTAMP(6)(11) DEFAULT CURRENT_TIMESTAMP
      ,
  PRIMARY KEY (USER_ID),
  CONSTRAINT SYS_C0046038 UNIQUE (EMAIL),
  CONSTRAINT SYS_C0046037 UNIQUE (USERNAME),
  CONSTRAINT SYS_C0046028 CHECK ("USER_ID" IS NOT NULL),
  CONSTRAINT SYS_C0046029 CHECK ("USERNAME" IS NOT NULL),
  CONSTRAINT SYS_C0046030 CHECK ("EMAIL" IS NOT NULL),
  CONSTRAINT SYS_C0046031 CHECK ("PASSWORD_HASH" IS NOT NULL),
  CONSTRAINT SYS_C0046032 CHECK ("FIRST_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046033 CHECK ("LAST_NAME" IS NOT NULL),
  CONSTRAINT SYS_C0046034 CHECK (ROLE IN ('ADMIN', 'HR', 'MANAGER', 'EMPLOYEE')),
  CONSTRAINT SYS_C0046035 CHECK (STATUS IN ('ACTIVE', 'INACTIVE', 'SUSPENDED'))
)`);
    console.log('‚úÖ Created table: HRMS_USERS');
    
    // Add foreign key constraints
    console.log('üîó Adding foreign key constraints...');
    await executeQuery('ALTER TABLE HRMS_ADVANCES ADD CONSTRAINT FK_ADVANCE_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ADVANCES');
    await executeQuery('ALTER TABLE HRMS_ADVANCES ADD CONSTRAINT FK_ADVANCE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ADVANCES');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE ADD CONSTRAINT FK_ATTENDANCE_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE ADD CONSTRAINT FK_ATTENDANCE_SHIFT FOREIGN KEY (SHIFT_ID) REFERENCES HRMS_SHIFTS(SHIFT_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE ADD CONSTRAINT FK_ATTENDANCE_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE ADD CONSTRAINT FK_ATTENDANCE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE_LOGS ADD CONSTRAINT FK_ATTENDANCE_LOGS_DEVICE FOREIGN KEY (DEVICE_ID) REFERENCES HRMS_BIOMETRIC_DEVICES(DEVICE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE_LOGS');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE_LOGS ADD CONSTRAINT FK_ATTENDANCE_LOGS_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE_LOGS');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE_RULES ADD CONSTRAINT FK_ATTENDANCE_RULES_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE_RULES');
    await executeQuery('ALTER TABLE HRMS_ATTENDANCE_SETTINGS ADD CONSTRAINT FK_ATTENDANCE_SETTINGS_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ATTENDANCE_SETTINGS');
    await executeQuery('ALTER TABLE HRMS_BIOMETRIC_DEVICES ADD CONSTRAINT FK_BIOMETRIC_DEVICES_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_BIOMETRIC_DEVICES');
    await executeQuery('ALTER TABLE HRMS_CALENDAR_HOLIDAYS ADD CONSTRAINT FK_CALENDAR_HOLIDAYS_CALENDAR FOREIGN KEY (CALENDAR_ID) REFERENCES HRMS_CALENDAR(CALENDAR_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_CALENDAR_HOLIDAYS');
    await executeQuery('ALTER TABLE HRMS_COST_CENTERS ADD CONSTRAINT FK_COST_CENTER_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_COST_CENTERS');
    await executeQuery('ALTER TABLE HRMS_DEDUCTIONS ADD CONSTRAINT FK_DEDUCTION_APPLIED_BY FOREIGN KEY (APPLIED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_DEDUCTIONS');
    await executeQuery('ALTER TABLE HRMS_DEDUCTIONS ADD CONSTRAINT FK_DEDUCTION_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_DEDUCTIONS');
    await executeQuery('ALTER TABLE HRMS_DEDUCTIONS ADD CONSTRAINT FK_DEDUCTION_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_DEDUCTIONS');
    await executeQuery('ALTER TABLE HRMS_DESIGNATIONS ADD CONSTRAINT FK_DESIGNATION_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_DESIGNATIONS');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEES ADD CONSTRAINT FK_EMPLOYEE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEES');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEES ADD CONSTRAINT FK_EMPLOYEE_REPORT_TO FOREIGN KEY (REPORT_TO_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEES');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEES ADD CONSTRAINT FK_EMPLOYEE_PAY_GRADE FOREIGN KEY (PAY_GRADE_ID) REFERENCES HRMS_PAY_GRADES(PAY_GRADE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEES');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEES ADD CONSTRAINT FK_EMPLOYEE_CALENDAR FOREIGN KEY (CALENDAR_ID) REFERENCES HRMS_CALENDAR(CALENDAR_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEES');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEES ADD CONSTRAINT FK_EMPLOYEE_SHIFT FOREIGN KEY (SHIFT_ID) REFERENCES HRMS_SHIFTS(SHIFT_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEES');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEE_CALENDAR ADD CONSTRAINT FK_EMPLOYEE_CALENDAR_CALENDAR FOREIGN KEY (CALENDAR_ID) REFERENCES HRMS_CALENDAR(CALENDAR_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEE_CALENDAR');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEE_CALENDAR ADD CONSTRAINT FK_EMPLOYEE_CALENDAR_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEE_CALENDAR');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEE_COMPENSATION ADD CONSTRAINT FK_EMP_COMP_PAY_COMPONENT FOREIGN KEY (PAY_COMPONENT_ID) REFERENCES HRMS_PAY_COMPONENTS(PAY_COMPONENT_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEE_COMPENSATION');
    await executeQuery('ALTER TABLE HRMS_EMPLOYEE_COMPENSATION ADD CONSTRAINT FK_EMP_COMP_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_EMPLOYEE_COMPENSATION');
    await executeQuery('ALTER TABLE HRMS_LEAVES ADD CONSTRAINT FK_LEAVE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVES');
    await executeQuery('ALTER TABLE HRMS_LEAVES ADD CONSTRAINT FK_LEAVE_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVES');
    await executeQuery('ALTER TABLE HRMS_LEAVES ADD CONSTRAINT FK_LEAVE_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVES');
    await executeQuery('ALTER TABLE HRMS_LEAVE_BALANCE ADD CONSTRAINT FK_LEAVE_BALANCE_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVE_BALANCE');
    await executeQuery('ALTER TABLE HRMS_LEAVE_BALANCE ADD CONSTRAINT FK_LEAVE_BALANCE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVE_BALANCE');
    await executeQuery('ALTER TABLE HRMS_LEAVE_POLICIES ADD CONSTRAINT FK_LEAVE_POLICY_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVE_POLICIES');
    await executeQuery('ALTER TABLE HRMS_LEAVE_RESUMPTIONS ADD CONSTRAINT FK_RESUMPTION_APPLIED_BY FOREIGN KEY (APPLIED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVE_RESUMPTIONS');
    await executeQuery('ALTER TABLE HRMS_LEAVE_RESUMPTIONS ADD CONSTRAINT FK_RESUMPTION_LEAVE FOREIGN KEY (LEAVE_ID) REFERENCES HRMS_LEAVES(LEAVE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVE_RESUMPTIONS');
    await executeQuery('ALTER TABLE HRMS_LEAVE_RESUMPTIONS ADD CONSTRAINT FK_RESUMPTION_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVE_RESUMPTIONS');
    await executeQuery('ALTER TABLE HRMS_LEAVE_RESUMPTIONS ADD CONSTRAINT FK_RESUMPTION_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LEAVE_RESUMPTIONS');
    await executeQuery('ALTER TABLE HRMS_LOANS ADD CONSTRAINT FK_LOAN_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LOANS');
    await executeQuery('ALTER TABLE HRMS_LOANS ADD CONSTRAINT FK_LOAN_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LOANS');
    await executeQuery('ALTER TABLE HRMS_LOCATIONS ADD CONSTRAINT FK_LOCATION_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_LOCATIONS');
    await executeQuery('ALTER TABLE HRMS_OVERTIME ADD CONSTRAINT FK_OVERTIME_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_OVERTIME');
    await executeQuery('ALTER TABLE HRMS_OVERTIME ADD CONSTRAINT FK_OVERTIME_ATTENDANCE FOREIGN KEY (ATTENDANCE_ID) REFERENCES HRMS_ATTENDANCE(ATTENDANCE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_OVERTIME');
    await executeQuery('ALTER TABLE HRMS_OVERTIME ADD CONSTRAINT FK_OVERTIME_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_OVERTIME');
    await executeQuery('ALTER TABLE HRMS_OVERTIME ADD CONSTRAINT FK_OVERTIME_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_OVERTIME');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_APPROVALS ADD CONSTRAINT FK_PAYROLL_APPROVALS_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_APPROVALS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_APPROVALS ADD CONSTRAINT FK_PAYROLL_APPROVALS_PAYROLL FOREIGN KEY (PAYROLL_ID) REFERENCES HRMS_PAYROLL_DETAILS(PAYROLL_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_APPROVALS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_APPROVALS ADD CONSTRAINT FK_PAYROLL_APPROVALS_PERIOD FOREIGN KEY (PERIOD_ID) REFERENCES HRMS_PAYROLL_PERIODS(PERIOD_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_APPROVALS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_DEDUCTIONS ADD CONSTRAINT FK_PAYROLL_DEDUCTIONS_PAYROLL FOREIGN KEY (PAYROLL_ID) REFERENCES HRMS_PAYROLL_DETAILS(PAYROLL_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_DEDUCTIONS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_DETAILS ADD CONSTRAINT FK_PAYROLL_DETAILS_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_DETAILS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_DETAILS ADD CONSTRAINT FK_PAYROLL_DETAILS_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_DETAILS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_DETAILS ADD CONSTRAINT FK_PAYROLL_DETAILS_RUN FOREIGN KEY (RUN_ID) REFERENCES HRMS_PAYROLL_RUNS(RUN_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_DETAILS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_DETAILS ADD CONSTRAINT FK_PAYROLL_DETAILS_PERIOD FOREIGN KEY (PERIOD_ID) REFERENCES HRMS_PAYROLL_PERIODS(PERIOD_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_DETAILS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_DETAILS ADD CONSTRAINT FK_PAYROLL_DETAILS_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_DETAILS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_EARNINGS ADD CONSTRAINT FK_PAYROLL_EARNINGS_PAYROLL FOREIGN KEY (PAYROLL_ID) REFERENCES HRMS_PAYROLL_DETAILS(PAYROLL_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_EARNINGS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_EARNINGS ADD CONSTRAINT FK_PAYROLL_EARNINGS_COMPONENT FOREIGN KEY (PAY_COMPONENT_ID) REFERENCES HRMS_PAY_COMPONENTS(PAY_COMPONENT_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_EARNINGS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_PERIODS ADD CONSTRAINT FK_PAYROLL_PERIODS_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_PERIODS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_RUNS ADD CONSTRAINT FK_PAYROLL_RUNS_PERIOD FOREIGN KEY (PERIOD_ID) REFERENCES HRMS_PAYROLL_PERIODS(PERIOD_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_RUNS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_RUNS ADD CONSTRAINT FK_PAYROLL_RUNS_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_RUNS');
    await executeQuery('ALTER TABLE HRMS_PAYROLL_SETTINGS ADD CONSTRAINT FK_PAYROLL_SETTINGS_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAYROLL_SETTINGS');
    await executeQuery('ALTER TABLE HRMS_PAY_COMPONENTS ADD CONSTRAINT FK_PAY_COMPONENT_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAY_COMPONENTS');
    await executeQuery('ALTER TABLE HRMS_PAY_GRADES ADD CONSTRAINT FK_PAY_GRADE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PAY_GRADES');
    await executeQuery('ALTER TABLE HRMS_POSITIONS ADD CONSTRAINT FK_POSITION_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_POSITIONS');
    await executeQuery('ALTER TABLE HRMS_PROJECTS ADD CONSTRAINT FK_PROJECT_MANAGER FOREIGN KEY (PROJECT_MANAGER) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PROJECTS');
    await executeQuery('ALTER TABLE HRMS_PROJECTS ADD CONSTRAINT FK_PROJECT_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_PROJECTS');
    await executeQuery('ALTER TABLE HRMS_RESIGNATIONS ADD CONSTRAINT FK_RESIGNATION_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_RESIGNATIONS');
    await executeQuery('ALTER TABLE HRMS_RESIGNATIONS ADD CONSTRAINT FK_RESIGNATION_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_RESIGNATIONS');
    await executeQuery('ALTER TABLE HRMS_ROLES ADD CONSTRAINT FK_ROLE_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_ROLES');
    await executeQuery('ALTER TABLE HRMS_TIMESHEETS ADD CONSTRAINT FK_TIMESHEET_APPROVED_BY FOREIGN KEY (APPROVED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_TIMESHEETS');
    await executeQuery('ALTER TABLE HRMS_TIMESHEETS ADD CONSTRAINT FK_TIMESHEET_EMPLOYEE FOREIGN KEY (EMPLOYEE_ID) REFERENCES HRMS_EMPLOYEES(EMPLOYEE_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_TIMESHEETS');
    await executeQuery('ALTER TABLE HRMS_TIMESHEETS ADD CONSTRAINT FK_TIMESHEET_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_TIMESHEETS');
    await executeQuery('ALTER TABLE HRMS_TIMESHEET_ENTRIES ADD CONSTRAINT FK_ENTRY_CREATED_BY FOREIGN KEY (CREATED_BY) REFERENCES HRMS_USERS(USER_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_TIMESHEET_ENTRIES');
    await executeQuery('ALTER TABLE HRMS_TIMESHEET_ENTRIES ADD CONSTRAINT FK_ENTRY_TIMESHEET FOREIGN KEY (TIMESHEET_ID) REFERENCES HRMS_TIMESHEETS(TIMESHEET_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_TIMESHEET_ENTRIES');
    await executeQuery('ALTER TABLE HRMS_TIMESHEET_ENTRIES ADD CONSTRAINT FK_ENTRY_PROJECT FOREIGN KEY (PROJECT_ID) REFERENCES HRMS_PROJECTS(PROJECT_ID)');
    console.log('‚úÖ Added FK constraint to: HRMS_TIMESHEET_ENTRIES');
    
    // Create indexes
    console.log('üìä Creating indexes...');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046459 ON HRMS_ADVANCES (SYS_C0046459)');
    console.log('‚úÖ Created index for: HRMS_ADVANCES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047075 ON HRMS_ATTENDANCE (SYS_C0047075)');
    console.log('‚úÖ Created index for: HRMS_ATTENDANCE');
    await executeQuery('CREATE UNIQUE INDEX UQ_ATTENDANCE_EMPLOYEE_DATE ON HRMS_ATTENDANCE (UQ_ATTENDANCE_EMPLOYEE_DATE)');
    console.log('‚úÖ Created index for: HRMS_ATTENDANCE');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047105 ON HRMS_ATTENDANCE_LOGS (SYS_C0047105)');
    console.log('‚úÖ Created index for: HRMS_ATTENDANCE_LOGS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047089 ON HRMS_ATTENDANCE_RULES (SYS_C0047089)');
    console.log('‚úÖ Created index for: HRMS_ATTENDANCE_RULES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047134 ON HRMS_ATTENDANCE_SETTINGS (SYS_C0047134)');
    console.log('‚úÖ Created index for: HRMS_ATTENDANCE_SETTINGS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047135 ON HRMS_ATTENDANCE_SETTINGS (SYS_C0047135)');
    console.log('‚úÖ Created index for: HRMS_ATTENDANCE_SETTINGS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047096 ON HRMS_BIOMETRIC_DEVICES (SYS_C0047096)');
    console.log('‚úÖ Created index for: HRMS_BIOMETRIC_DEVICES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047097 ON HRMS_BIOMETRIC_DEVICES (SYS_C0047097)');
    console.log('‚úÖ Created index for: HRMS_BIOMETRIC_DEVICES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047015 ON HRMS_CALENDAR (SYS_C0047015)');
    console.log('‚úÖ Created index for: HRMS_CALENDAR');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047016 ON HRMS_CALENDAR (SYS_C0047016)');
    console.log('‚úÖ Created index for: HRMS_CALENDAR');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047021 ON HRMS_CALENDAR_HOLIDAYS (SYS_C0047021)');
    console.log('‚úÖ Created index for: HRMS_CALENDAR_HOLIDAYS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046362 ON HRMS_COST_CENTERS (SYS_C0046362)');
    console.log('‚úÖ Created index for: HRMS_COST_CENTERS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046363 ON HRMS_COST_CENTERS (SYS_C0046363)');
    console.log('‚úÖ Created index for: HRMS_COST_CENTERS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046622 ON HRMS_DEDUCTIONS (SYS_C0046622)');
    console.log('‚úÖ Created index for: HRMS_DEDUCTIONS');
    await executeQuery('CREATE INDEX IDX_DEDUCTIONS_EMPLOYEE ON HRMS_DEDUCTIONS (IDX_DEDUCTIONS_EMPLOYEE)');
    console.log('‚úÖ Created index for: HRMS_DEDUCTIONS');
    await executeQuery('CREATE INDEX IDX_DEDUCTIONS_TYPE ON HRMS_DEDUCTIONS (IDX_DEDUCTIONS_TYPE)');
    console.log('‚úÖ Created index for: HRMS_DEDUCTIONS');
    await executeQuery('CREATE INDEX IDX_DEDUCTIONS_STATUS ON HRMS_DEDUCTIONS (IDX_DEDUCTIONS_STATUS)');
    console.log('‚úÖ Created index for: HRMS_DEDUCTIONS');
    await executeQuery('CREATE INDEX IDX_DEDUCTIONS_DATE ON HRMS_DEDUCTIONS (IDX_DEDUCTIONS_DATE)');
    console.log('‚úÖ Created index for: HRMS_DEDUCTIONS');
    await executeQuery('CREATE INDEX IDX_DEDUCTIONS_EFFECTIVE_FROM ON HRMS_DEDUCTIONS (IDX_DEDUCTIONS_EFFECTIVE_FROM)');
    console.log('‚úÖ Created index for: HRMS_DEDUCTIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046337 ON HRMS_DESIGNATIONS (SYS_C0046337)');
    console.log('‚úÖ Created index for: HRMS_DESIGNATIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046338 ON HRMS_DESIGNATIONS (SYS_C0046338)');
    console.log('‚úÖ Created index for: HRMS_DESIGNATIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046058 ON HRMS_EMPLOYEES (SYS_C0046058)');
    console.log('‚úÖ Created index for: HRMS_EMPLOYEES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046059 ON HRMS_EMPLOYEES (SYS_C0046059)');
    console.log('‚úÖ Created index for: HRMS_EMPLOYEES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047027 ON HRMS_EMPLOYEE_CALENDAR (SYS_C0047027)');
    console.log('‚úÖ Created index for: HRMS_EMPLOYEE_CALENDAR');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046814 ON HRMS_EMPLOYEE_COMPENSATION (SYS_C0046814)');
    console.log('‚úÖ Created index for: HRMS_EMPLOYEE_COMPENSATION');
    await executeQuery('CREATE UNIQUE INDEX UK_EMP_PAY_COMPONENT_DATE ON HRMS_EMPLOYEE_COMPENSATION (UK_EMP_PAY_COMPONENT_DATE)');
    console.log('‚úÖ Created index for: HRMS_EMPLOYEE_COMPENSATION');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046533 ON HRMS_LEAVES (SYS_C0046533)');
    console.log('‚úÖ Created index for: HRMS_LEAVES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047112 ON HRMS_LEAVE_BALANCE (SYS_C0047112)');
    console.log('‚úÖ Created index for: HRMS_LEAVE_BALANCE');
    await executeQuery('CREATE UNIQUE INDEX UQ_LEAVE_BALANCE_EMPLOYEE_TYPE_YEAR ON HRMS_LEAVE_BALANCE (UQ_LEAVE_BALANCE_EMPLOYEE_TYPE_YEAR)');
    console.log('‚úÖ Created index for: HRMS_LEAVE_BALANCE');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046400 ON HRMS_LEAVE_POLICIES (SYS_C0046400)');
    console.log('‚úÖ Created index for: HRMS_LEAVE_POLICIES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046401 ON HRMS_LEAVE_POLICIES (SYS_C0046401)');
    console.log('‚úÖ Created index for: HRMS_LEAVE_POLICIES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046562 ON HRMS_LEAVE_RESUMPTIONS (SYS_C0046562)');
    console.log('‚úÖ Created index for: HRMS_LEAVE_RESUMPTIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046477 ON HRMS_LOANS (SYS_C0046477)');
    console.log('‚úÖ Created index for: HRMS_LOANS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046355 ON HRMS_LOCATIONS (SYS_C0046355)');
    console.log('‚úÖ Created index for: HRMS_LOCATIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046356 ON HRMS_LOCATIONS (SYS_C0046356)');
    console.log('‚úÖ Created index for: HRMS_LOCATIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047034 ON HRMS_NAMED_HOLIDAY_TEMPLATES (SYS_C0047034)');
    console.log('‚úÖ Created index for: HRMS_NAMED_HOLIDAY_TEMPLATES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047035 ON HRMS_NAMED_HOLIDAY_TEMPLATES (SYS_C0047035)');
    console.log('‚úÖ Created index for: HRMS_NAMED_HOLIDAY_TEMPLATES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047125 ON HRMS_OVERTIME (SYS_C0047125)');
    console.log('‚úÖ Created index for: HRMS_OVERTIME');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047223 ON HRMS_PAYROLL_APPROVALS (SYS_C0047223)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_APPROVALS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047202 ON HRMS_PAYROLL_DEDUCTIONS (SYS_C0047202)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_DEDUCTIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047190 ON HRMS_PAYROLL_DETAILS (SYS_C0047190)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_DETAILS');
    await executeQuery('CREATE UNIQUE INDEX UQ_PAYROLL_EMPLOYEE_PERIOD ON HRMS_PAYROLL_DETAILS (UQ_PAYROLL_EMPLOYEE_PERIOD)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_DETAILS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047209 ON HRMS_PAYROLL_EARNINGS (SYS_C0047209)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_EARNINGS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047172 ON HRMS_PAYROLL_PERIODS (SYS_C0047172)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_PERIODS');
    await executeQuery('CREATE UNIQUE INDEX UQ_PAYROLL_PERIOD_DATES ON HRMS_PAYROLL_PERIODS (UQ_PAYROLL_PERIOD_DATES)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_PERIODS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047180 ON HRMS_PAYROLL_RUNS (SYS_C0047180)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_RUNS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047217 ON HRMS_PAYROLL_SETTINGS (SYS_C0047217)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_SETTINGS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047216 ON HRMS_PAYROLL_SETTINGS (SYS_C0047216)');
    console.log('‚úÖ Created index for: HRMS_PAYROLL_SETTINGS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046374 ON HRMS_PAY_COMPONENTS (SYS_C0046374)');
    console.log('‚úÖ Created index for: HRMS_PAY_COMPONENTS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046375 ON HRMS_PAY_COMPONENTS (SYS_C0046375)');
    console.log('‚úÖ Created index for: HRMS_PAY_COMPONENTS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047064 ON HRMS_PAY_GRADES (SYS_C0047064)');
    console.log('‚úÖ Created index for: HRMS_PAY_GRADES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0047065 ON HRMS_PAY_GRADES (SYS_C0047065)');
    console.log('‚úÖ Created index for: HRMS_PAY_GRADES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046349 ON HRMS_POSITIONS (SYS_C0046349)');
    console.log('‚úÖ Created index for: HRMS_POSITIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046350 ON HRMS_POSITIONS (SYS_C0046350)');
    console.log('‚úÖ Created index for: HRMS_POSITIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046661 ON HRMS_PROJECTS (SYS_C0046661)');
    console.log('‚úÖ Created index for: HRMS_PROJECTS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046662 ON HRMS_PROJECTS (SYS_C0046662)');
    console.log('‚úÖ Created index for: HRMS_PROJECTS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046605 ON HRMS_RESIGNATIONS (SYS_C0046605)');
    console.log('‚úÖ Created index for: HRMS_RESIGNATIONS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046343 ON HRMS_ROLES (SYS_C0046343)');
    console.log('‚úÖ Created index for: HRMS_ROLES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046344 ON HRMS_ROLES (SYS_C0046344)');
    console.log('‚úÖ Created index for: HRMS_ROLES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046696 ON HRMS_SHIFTS (SYS_C0046696)');
    console.log('‚úÖ Created index for: HRMS_SHIFTS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046697 ON HRMS_SHIFTS (SYS_C0046697)');
    console.log('‚úÖ Created index for: HRMS_SHIFTS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046672 ON HRMS_TIMESHEETS (SYS_C0046672)');
    console.log('‚úÖ Created index for: HRMS_TIMESHEETS');
    await executeQuery('CREATE UNIQUE INDEX UK_TIMESHEET_EMP_DATE ON HRMS_TIMESHEETS (UK_TIMESHEET_EMP_DATE)');
    console.log('‚úÖ Created index for: HRMS_TIMESHEETS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046686 ON HRMS_TIMESHEET_ENTRIES (SYS_C0046686)');
    console.log('‚úÖ Created index for: HRMS_TIMESHEET_ENTRIES');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046036 ON HRMS_USERS (SYS_C0046036)');
    console.log('‚úÖ Created index for: HRMS_USERS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046037 ON HRMS_USERS (SYS_C0046037)');
    console.log('‚úÖ Created index for: HRMS_USERS');
    await executeQuery('CREATE UNIQUE INDEX SYS_C0046038 ON HRMS_USERS (SYS_C0046038)');
    console.log('‚úÖ Created index for: HRMS_USERS');
    
    console.log('üéâ Exact migration completed successfully!');
    
  } catch (error) {
    console.error('‚ùå Migration failed:', error.message);
    throw error;
  } finally {
    await closeDatabase();
  }
}

// Run migration if called directly
if (require.main === module) {
  runExactMigration().catch(console.error);
}

module.exports = { runExactMigration };
